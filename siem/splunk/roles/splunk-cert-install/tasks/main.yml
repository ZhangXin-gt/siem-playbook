---
- name: create temp folder
  ansible.builtin.tempfile:
    state: directory
    prefix: siem_splunk
  register: cert_temp

- include_tasks: self_sign.yml
  when: "'self_ca_path' in splunk"

- include_tasks: pki.yml
  when: "'ms_cert_path' in splunk"

- name: read root ca
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/rootCA.pem"
  register: rootCA

- name: read app ca
  ansible.builtin.slurp:
    src: "{{ splunk.home }}/etc/auth/appsCA.pem"
  register: appsca

- name: install ca certificate
  ansible.builtin.copy:
    content: "{{ appsca['content'] | b64decode }}{{ rootCA['content'] | b64decode }}\n"
    dest: "{{ splunk.home }}/etc/auth/cacert.pem"
    mode: 0600

- name: generated encrypted web private key
  ansible.builtin.command:
    cmd: "openssl pkcs8 -in key.pem -topk8 -passin pass:{{ splunk.ssl.password }} -nocrypt -out unencrypted_key.pem"
    chdir: "{{ cert_temp.path }}"

- name: read server certificate
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/{{ inventory_hostname }}.crt"
  register: server_cert

- name: read server key
  ansible.builtin.slurp:
    src: "{{ cert_temp.path }}/key.pem"
  register: server_key

- name: install server certificate
  ansible.builtin.copy:
    content: "{{ server_cert['content'] | b64decode }}{{ server_key['content'] | b64decode }}{{ rootCA['content'] | b64decode }}\n"
    dest: "{{ splunk.home }}/etc/auth/server.pem"
    mode: 0600

- name: install web certificate
  ansible.builtin.copy:
    remote_src: yes
    src: "{{ cert_temp.path }}/{{ inventory_hostname }}.crt"
    dest: "{{ splunk.home }}/etc/auth/splunkweb/cert.pem"
    mode: 0600

- name: install private key
  ansible.builtin.copy:
    remote_src: yes
    src: "{{ cert_temp.path }}/unencrypted_key.pem"
    dest: "{{ splunk.home }}/etc/auth/splunkweb/privkey.pem"
    mode: 0600

- name: cleanup temp folder
  ansible.builtin.file:
    path: '{{ cert_temp.path }}'
    state: absent
