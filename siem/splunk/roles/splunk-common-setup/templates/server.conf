[general]
serverName = {{ inventory_hostname }}
sessionTimeout = 1h
pass4SymmKey = {{ splunk.pass4SymmKey }}
legacyCiphers = disabled
{% if splunk_site is defined %}
site = {{ splunk_site }}
{% endif %}

[sslConfig]
enableSplunkdSSL = true
sslVerifyServerCert = true
# sslCommonNameToCheck = {{ groups['splunk'] | join(',') }}
requireClientCert = true
serverCert = {{ splunk.home }}/etc/auth/server.pem
sslPassword = {{ splunk.ssl.password }}
sslRootCAPath = {{ splunk.home }}/etc/auth/cacert.pem
sendStrictTransportSecurityHeader = true
allowSslRenegotiation = false

#[proxyConfig]
#http_proxy =
#https_proxy =
#proxy_rules =

[httpServer]
# acceptFrom = {{ groups['splunk'] | join(',') }}
allowEmbedTokenAuth = false
allowWwwAuthHeader = false

[license]
{% if inventory_hostname not in groups['license_master'] %}
master_uri = https://{{ groups['license_master'][0] }}:8089
{% else %}
active_group = Enterprise
{% endif %}

{% if inventory_hostname in groups['license_master'] %}
[lmpool:cod-siem]
description = cod-siem-pool
quota = MAX
slaves = *
stack_id = enterprise

[lmpool:auto_generated_pool_forwarder]
description = auto_generated_pool_forwarder
quota = MAX
slaves = *
stack_id = forwarder

[lmpool:auto_generated_pool_free]
description = auto_generated_pool_free
quota = MAX
slaves = *
stack_id = free
{% endif %}


{% if inventory_hostname in groups['cluster_master'] %}
[clustering]
mode = manager
pass4SymmKey = {{ splunk.idxc.pass4SymmKey }}
multisite = true
replication_factor = 2
site_replication_factor = origin:1,total:2
site_search_factor = origin:1,total:2
available_sites = site1,site2
# forwarder_site_failover = site1:site2
# summary_replication = true
allow_default_empty_p4symmkey = false
cluster_label = COD SIEM
{% endif %}

{% if inventory_hostname in groups['indexer'] %}
[clustering]
mode = peer
manager_uri = https://{{ groups['cluster_master'][0] }}:8089
pass4SymmKey = {{ splunk.idxc.pass4SymmKey }}
{% endif %}

{% if inventory_hostname in groups['search_head'] %}
[clustering]
mode = searchhead
manager_uri = https://{{ groups['cluster_master'][0] }}:8089
pass4SymmKey = {{ splunk.idxc.pass4SymmKey }}
multisite = true
{% endif %}

{% if inventory_hostname in groups['indexer'] %}
[replication_port-ssl://9887]
# acceptFrom =
serverCert = {{ splunk.home }}/etc/auth/server.pem
sslPassword = {{ splunk.ssl.password }}
requireClientCert = true
allowSslRenegotiation = false
#sslCommonNameToCheck =
{% endif %}

{% if inventory_hostname in groups['search_head'] %}
[replication_port-ssl://9887]
# acceptFrom =
serverCert = {{ splunk.home }}/etc/auth/server.pem
sslPassword = {{ splunk.ssl.password }}
requireClientCert = true
allowSslRenegotiation = false
#sslCommonNameToCheck =
{% endif %}

{% if inventory_hostname in groups['search_head'] %}
[shclustering]
disabled = false
mgmt_uri = https://{{ inventory_hostname }}:8089
replication_factor = 2
pass4SymmKey = {{ splunk.shc.pass4SymmKey }}
conf_deploy_fetch_url = https://{{ groups['deployer'][0] }}:8089
shcluster_label = cod-siem-sh
# servers_list
{% endif %}

{% if inventory_hostname in groups['deployer'] %}
[shclustering]
pass4SymmKey = {{ splunk.shc.pass4SymmKey }}
shcluster_label = cod-siem-sh
{% endif %}


[kvstore]
#disabled = 
#replication_host = <host>
storageEngine = wiredTiger
# serverCert =
# sslPassword =

#[cascading_replication]
#pass4SymmKey =

[node_auth]
signatureVersion = v2

#[raft_statemachine]
#disabled = false
#replicate_search_peers = true